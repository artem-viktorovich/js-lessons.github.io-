  function printText() {   - конструкция функции
            console.log('Hello');  - тело функции
        }
printText(); - вызов функции


 function printText(name, age) { в этой функции вводим нужные нам параметры
            console.log("Hello, my name is "+name+", Age:" +age);
        }
        printText("Anton", "20"); вывод наших заданных параметров


=============================================
        function printText(name, age) {
          return "Hello, my name is "+name+", Age:" +age 
        }
        console.log(printText("Anton", "20"));

Данным способом вернее записывать, так как return возвращает строку
А мы эту строку уже можем менять и переписывать как хотим, не меняя ничего в вызове
=============================================
function printText(name, age) {
          return "Hello, my name is "+name+", Age:" +age
        }
        let res = printText("Anton", "20");
        alert(res);
данным методом проще вызвать результат функции, и проще с ним работать
=============================================

 let obj = {
            name: 'Ivan',
            age: 20,
            hello(){
                console.log("Меня зовут "+this.name);
            }
        }
        obj.hello(); - вывод метода с сазаддыми параметрами

=============================================
 let arr = [1,4,5,67,8,9,56,1,1,3,5,6,67]
        arr.sort(function(a,b){
            if(a==b) return 0
            if(a>b) return 1
            if(a<b) return -1
        })
        console.log(arr);
отсориторовали массив, методом sort
но также можно записать иным способом
 let arr = [1,4,5,67,8,9,56,1,1,3,5,6,67]
        arr.sort(function(a,b){
          return a-b 
        })
        console.log(arr);
или
  let arr = [1,4,5,67,8,9,56,1,1,3,5,6,67]
        arr.sort((a,b) => a - b) - сокращенная запись
        console.log(arr);

=============================================
сокращённая запись чисел Фибоначи
function fibonachi(count){
            let fib = [1,2]; - здесь можно варьировать и устанавливать стартом счёта чисел в массиве
            for (let i = 2; i < count; i++) {
                fib[i] = fib[i - 2] + fib[i - 1];
            }
            return fib; 
        }
        let f = fibonachi(10);
        console.log(f);
=============================================
Вычисление факториала числа
function factorial(n){
        let fact = 1; - установка факториала
        if(n==0) return fact; условие факториала для нуля
        for(let i=1; i<=n; i++){ - цикл для расчёта факторила, который зададим
            fact *= i;
        }
        return fact;
    }
    let a = factorial(5);
    console.log(a);

=============================================
вычисление производных
  let addAndMul = function(num) {
        num += "";
        let add = 0, mul = 1;
        for(let i = 0; i<num.length; i++){
            add += +num[i];
            mul *= num[i];
        }
        return{
            "Сумма": add,
            "Произведение": mul
        }
    }
    console.log(addAndMul(852));
=============================================
реверс числа, то есть сделать(перевёртыш)
function reverse(number){
            number += "";
            let reverseNumber = "";
            for(let i=number.length-1; i>=0; i--){
                reverseNumber += number[i]
            }
            return +reverseNumber
        }
        let rev = reverse(5566)
           console.log(rev);
=============================================
количество чётных и нечётных чисел
  function number(number){
            number += "";
            let chet = 0; nechet = 0;
            for(let i=0; i<number.length; i++){
                if (number[i]%2==0) chet++;
                else nechet++;
            }
            return{
                "Четные цыфры": chet,
                "Нечетные цыфры": nechet,
            }
        }
        console.log(number(2586));
=============================================
=============================================
=============================================
